import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Trophy, Star, Target, Zap, Award, TrendingUp } from 'lucide-react';

const achievements = [
  { id: 1, title: '–ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞', icon: Zap, description: '–ó–∞–≤–µ—Ä—à–∏–ª 10 –∑–∞–¥–∞—á –∑–∞ –Ω–µ–¥–µ–ª—é', unlocked: true, progress: 100 },
  { id: 2, title: '–ú–∞—Å—Ç–µ—Ä –∫–∞—á–µ—Å—Ç–≤–∞', icon: Star, description: '–ë–µ–∑ –∑–∞–º–µ—á–∞–Ω–∏–π –≤ 20 –ø—Ä–æ–µ–∫—Ç–∞—Ö', unlocked: true, progress: 100 },
  { id: 3, title: '–ö–æ–º–∞–Ω–¥–Ω—ã–π –∏–≥—Ä–æ–∫', icon: Target, description: '–ü–æ–º–æ–≥ 5 –∫–æ–ª–ª–µ–≥–∞–º', unlocked: false, progress: 60 },
  { id: 4, title: '–ù–æ–≤–∞—Ç–æ—Ä', icon: Award, description: '–ü—Ä–µ–¥–ª–æ–∂–∏–ª 3 —É–ª—É—á—à–µ–Ω–∏—è', unlocked: false, progress: 33 },
  { id: 5, title: '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü', icon: Trophy, description: '–ó–∞–≤–µ—Ä—à–∏–ª 100 –∑–∞–¥–∞—á', unlocked: false, progress: 75 },
  { id: 6, title: '–†–æ—Å—Ç –Ω–∞–≤—ã–∫–æ–≤', icon: TrendingUp, description: '–ü—Ä–æ—à–µ–ª 5 –æ–±—É—á–µ–Ω–∏–π', unlocked: false, progress: 40 },
];

const leaderboard = [
  { name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', points: 1250, tasks: 45, avatar: 'üë®‚Äçüíº' },
  { name: '–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞', points: 1180, tasks: 42, avatar: 'üë©‚Äçüíª' },
  { name: '–ü–µ—Ç—Ä –ö–æ–∑–ª–æ–≤', points: 1050, tasks: 38, avatar: 'üë®‚Äçüîß' },
  { name: '–ú–∞—Ä–∏—è –í–æ–ª–∫–æ–≤–∞', points: 980, tasks: 35, avatar: 'üë©‚Äçüé®' },
  { name: '–î–º–∏—Ç—Ä–∏–π –ù–æ–≤–∏–∫–æ–≤', points: 920, tasks: 32, avatar: 'üë®‚Äçüíª' },
];

export function Achievements() {
  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Trophy className="h-5 w-5 text-warning" />
            –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid gap-4 md:grid-cols-2">
            {achievements.map((achievement) => {
              const Icon = achievement.icon;
              return (
                <Card key={achievement.id} className={`p-4 ${achievement.unlocked ? 'bg-muted/50' : 'opacity-60'}`}>
                  <div className="flex items-start gap-3">
                    <div className={`p-2 rounded-lg ${achievement.unlocked ? 'bg-primary/10' : 'bg-muted'}`}>
                      <Icon className={`h-5 w-5 ${achievement.unlocked ? 'text-primary' : 'text-muted-foreground'}`} />
                    </div>
                    <div className="flex-1 space-y-2">
                      <div className="flex items-start justify-between">
                        <div>
                          <h4 className="font-medium">{achievement.title}</h4>
                          <p className="text-sm text-muted-foreground">{achievement.description}</p>
                        </div>
                        {achievement.unlocked && (
                          <Badge variant="default">
                            <Star className="h-3 w-3 mr-1" />
                            –ü–æ–ª—É—á–µ–Ω–æ
                          </Badge>
                        )}
                      </div>
                      {!achievement.unlocked && (
                        <div className="space-y-1">
                          <Progress value={achievement.progress} />
                          <p className="text-xs text-muted-foreground">{achievement.progress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                        </div>
                      )}
                    </div>
                  </div>
                </Card>
              );
            })}
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <TrendingUp className="h-5 w-5 text-success" />
            –†–µ–π—Ç–∏–Ω–≥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {leaderboard.map((user, index) => (
              <div key={index} className="flex items-center gap-4 p-3 rounded-lg border">
                <div className="flex items-center justify-center w-8 h-8 rounded-full bg-muted font-bold">
                  {index + 1}
                </div>
                <div className="text-2xl">{user.avatar}</div>
                <div className="flex-1">
                  <p className="font-medium">{user.name}</p>
                  <p className="text-sm text-muted-foreground">{user.tasks} –∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                </div>
                <Badge variant="secondary" className="text-lg font-bold">
                  {user.points}
                </Badge>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
